<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArepaMocks.TestValidTestReport</name>
    </assembly>
    <members>
        <member name="M:ArepaMocks.TestValidTestReport.UIMap.OpenNotePad">
            <summary>
            OpenNotePad - Use 'OpenNotePadParams' to pass parameters into this method.
            </summary>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.UIMap.WriteAMessage">
            <summary>
            WriteAMessage - Use 'WriteAMessageParams' to pass parameters into this method.
            </summary>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.UIMap.CloseAndDontSaveIt">
            <summary>
            CloseAndDontSaveIt
            </summary>
        </member>
        <member name="T:ArepaMocks.TestValidTestReport.OpenNotePadParams">
            <summary>
            Parameters to be passed into 'OpenNotePad'
            </summary>
        </member>
        <member name="F:ArepaMocks.TestValidTestReport.OpenNotePadParams.ExePath">
            <summary>
            Launch '%SystemRoot%\notepad.exe'
            </summary>
        </member>
        <member name="F:ArepaMocks.TestValidTestReport.OpenNotePadParams.AlternateExePath">
            <summary>
            Launch '%SystemRoot%\notepad.exe'
            </summary>
        </member>
        <member name="T:ArepaMocks.TestValidTestReport.WriteAMessageParams">
            <summary>
            Parameters to be passed into 'WriteAMessage'
            </summary>
        </member>
        <member name="F:ArepaMocks.TestValidTestReport.WriteAMessageParams.UIItemEditText">
            <summary>
            Type 'Just a test' in 'Unknown Name' text box
            </summary>
        </member>
        <member name="T:ArepaMocks.TestValidTestReport.UnitTest1">
            <summary>
            Summary description for UnitTest1
            </summary>
        </member>
        <member name="P:ArepaMocks.TestValidTestReport.UnitTest1.TestContext">
             <summary>
            Gets or sets the test context which provides
            information about and functionality for the current test run.
            </summary>
        </member>
        <member name="T:ArepaMocks.TestValidTestReport.FeatureSuccess2">
            <summary>
            @Feature: Pass all test on feature 2
            </summary>
            <remarks>
            As a Tester
            I want to have all my test (feature 2) passed
            So that I can test this feature
            </remarks>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.FeatureSuccess2.Scenario3">
            <summary>
            @Scenario: Scenario 3 with failure
            </summary>
            <remarks>
            Given a invalid test 3
            When the test is excuted
            Then the test should not pass
            </remarks>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.FeatureSuccess2.Scenario4">
            <summary>
            @Scenario: Scenario 4
            </summary>
            <remarks>
            Given a valid test 4
            When the test is excuted
            Then the test should pass
            </remarks>
        </member>
        <member name="P:ArepaMocks.TestValidTestReport.FeatureSuccess2.TestContext">
             <summary>
            Gets or sets the test context which provides
            information about and functionality for the current test run.
            </summary>
        </member>
        <member name="T:ArepaMocks.TestValidTestReport.FeatureSuccess1">
            <summary>
            @Feature: Pass all test on feature 1
            </summary>
            <remarks>
            As a Tester
            I want to have all my test (feature 1) passed
            So that I can test this feature
            </remarks>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.FeatureSuccess1.Scenario1">
            <summary>
            @Scenario: Scenario 1
            </summary>
            <remarks>
            Given a valid test 1
            When the test is excuted
            Then the test should pass
            </remarks>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.FeatureSuccess1.Scenario2">
            <summary>
            @Scenario: Scenario 2
            </summary>
            <remarks>
            Given a valid test 2
            When the test is excuted
            Then the test should pass
            </remarks>
        </member>
        <member name="P:ArepaMocks.TestValidTestReport.FeatureSuccess1.TestContext">
             <summary>
            Gets or sets the test context which provides
            information about and functionality for the current test run.
            </summary>
        </member>
        <member name="T:ArepaMocks.TestValidTestReport.BasicUnitTest1">
            <summary>
            @Feature: Basic Unit Test Feature
            </summary>
            <remarks>
            As a tester
            I want something
            So that I can justify it
            </remarks>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.BasicUnitTest1.BasicUnitTest1_TestMethod1">
            <summary>
            @Scenario: Test Method 1 for a Basic Unit Test 1
            </summary>
            <remarks>
            Given some precondition
            When ome actions
            Then some assertions
            </remarks>
        </member>
        <member name="T:ArepaMocks.TestValidTestReport.CodedUITest1">
            <summary>
            @Feature: Coded UI Test Feature
            </summary>
            <remarks>
            As a tester
            I want something
            So that I can justify it
            </remarks>
        </member>
        <member name="M:ArepaMocks.TestValidTestReport.CodedUITest1.CodedUITestMethod1">
            <summary>
            @Scenario: Test Method 1 for a Coded UI Test
            </summary>
            <remarks>
            Given some precondition
            When ome actions
            Then some assertions
            </remarks>
        </member>
        <member name="P:ArepaMocks.TestValidTestReport.CodedUITest1.TestContext">
             <summary>
            Gets or sets the test context which provides
            information about and functionality for the current test run.
            </summary>
        </member>
    </members>
</doc>
